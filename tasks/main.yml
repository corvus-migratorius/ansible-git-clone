---
- name: "Ensure an SSH client is installed"
  when: ansible_os_family == "Debian"
  ansible.builtin.apt:
    name: openssh-client
    state: present
    update_cache: true

- name: "Ensure an SSH client is installed"
  when: ansible_os_family == "RedHat"
  ansible.builtin.yum:
    name: openssh-clients
    state: present
    update_cache: true

- name: Check if SSH key is already present
  become: true
  become_user: "{{ git_clone_user }}"
  register: key_stat_result
  ansible.builtin.stat:
    path: "{{ git_clone_key_path }}"

- name: Generate SSH key pair for accessing GitHub
  become: true
  become_user: "{{ git_clone_user }}"
  when: not key_stat_result.stat.exists
  changed_when: false
  ansible.builtin.command:
    cmd: "ssh-keygen -t ed25519 -a 100 -C '{{ ansible_user }}@{{ ansible_host }}' -f {{ git_clone_key_path }} -N ''"

- name: Get public key content
  become: true
  become_user: "{{ git_clone_user }}"
  changed_when: false
  register: key_content
  ansible.builtin.command: "cat {{ git_clone_key_path }}.pub"

- name: Check if `known_hosts` exists
  become: true
  become_user: "{{ git_clone_user }}"
  register: known_hosts_stat
  ansible.builtin.stat:
    path: "{{ git_clone_known_hosts_path }}"

- name: Create `known_hosts` if it doesn't exist
  become: true
  become_user: "{{ git_clone_user }}"
  when: not known_hosts_stat.stat.exists
  ansible.builtin.file:
    path: "{{ git_clone_known_hosts_path }}"
    state: touch
    mode: "0660"

- name: Get the content of `known hosts`
  become: true
  become_user: "{{ git_clone_user }}"
  register: host_stat
  failed_when: host_stat.rc > 1
  changed_when: false
  ansible.builtin.shell:
    cmd: "set -o pipefail && cat {{ git_clone_known_hosts_path }} | grep {{ git_clone_git_server_fqdn }}"
    executable: /bin/bash

- name: Modify `known hosts`
  become: true
  become_user: "{{ git_clone_user }}"
  block:

    - name: Fetch GitHub public key
      register: keyscan
      changed_when: false
      ansible.builtin.command: "ssh-keyscan -T 10 {{ git_clone_git_server_fqdn }}"

    - name: Add GitHub public key to ssh known_hosts
      when: host_stat.rc == 1
      with_items: '{{ keyscan.stdout_lines }}'
      ansible.builtin.lineinfile:
        path: "{{ git_clone_known_hosts_path }}"
        create: true
        line: "{{ item }}"
        mode: "0660"

- name: Add SSH public key to GitHub account
  become: true
  become_user: "{{ git_clone_user }}"
  ansible.builtin.uri:
    url: "https://api.{{ git_clone_git_server_fqdn }}/user/keys"
    validate_certs: false
    method: POST
    body:
      title: "{{ git_clone_key_title }}"
      key: "{{ key_content.stdout }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "token {{ git_clone_gh_access_token }}"
    status_code:
      - 201
      - 422

- name: Add SSH key to SSH agent
  become: true
  become_user: "{{ git_clone_user }}"
  changed_when: false
  ansible.builtin.shell: |
    eval $(ssh-agent -s)
    ssh-add {{ git_clone_key_path }}

- name: Git checkout
  become: true
  become_user: "{{ git_clone_user }}"
  ansible.builtin.git:
    key_file: "{{ git_clone_key_path }}"
    ssh_opts: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    repo: "{{ git_clone_git_repo }}"
    dest: "{{ git_clone_dest }}"
    version: "{{ git_clone_repo_version }}"

- name: Kill the ssh-agent
  become: true
  become_user: "{{ git_clone_user }}"
  changed_when: false
  ansible.builtin.shell:
    cmd: set -o pipefail && export pid=$(ps -A | grep ssh-agent | awk 'NR==1{print $1}' | cut -d' ' -f1); kill $pid
    executable: /bin/bash
