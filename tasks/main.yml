---
- name: Check if ssh key is already present
  register: key_stat_result
  ansible.builtin.stat:
    path: "{{ KEY_PATH }}"

- name: Generate SSH key for accessing GitHub
  when: not key_stat_result.stat.exists
  changed_when: false
  ansible.builtin.command: "ssh-keygen -t rsa -f {{ KEY_PATH }} -N ''"

- name: Get key content
  changed_when: false
  register: key_content
  ansible.builtin.command: "cat {{ KEY_PATH }}.pub"

- name: Check if `known_hosts` exists
  register: known_hosts_stat
  ansible.builtin.stat:
    path: "{{ KNOWN_HOSTS_PATH }}"

- name: Create `known_hosts` if it doesn't exist
  when: not known_hosts_stat.stat.exists
  ansible.builtin.file:
    path: "{{ KNOWN_HOSTS_PATH }}"
    state: touch

- name: Get the content of `known hosts`
  register: host_stat
  failed_when: host_stat.rc > 1
  ansible.builtin.shell: "cat {{ KNOWN_HOSTS_PATH }} | grep {{ GIT_SERVER_FQDN }}"

- name: Modify `known hosts`
  ansible.builtin.block:
  
  - name: Fetch GitHub public key
    register: keyscan
    ansible.builtin.command: "ssh-keyscan -T 10 {{ GIT_SERVER_FQDN }}"

  - name: Add GitHub public key to ssh known_hosts
    when: host_stat.rc == 1
    with_items: '{{ keyscan.stdout_lines }}'
    ansible.builtin.lineinfile:
      path: "{{ KNOWN_HOSTS_PATH }}"
      create: yes
      line: "{{ item }}"

- name: Add SSH public key to GitHub account
  ansible.builtin.uri:
    url: "https://api.{{ GIT_SERVER_FQDN }}/user/keys"
    validate_certs: no
    method: POST
    body:
      title: "{{ KEY_TITLE }}"
      key: "{{ key_content.stdout }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "token {{ GITHUB_ACCESS_TOKEN }}"
    status_code:
    - 201
    - 422

- name: Configure SSH agent and clone repository
  ansible.builin.block:
  
  - name: Remove old repository
    ansible.builtin.file:
      path: "{{ CLONE_DEST }}"
      state: absent

  - name: Add SSH key to SSH agent
    ansible.builtin.shell: |
      eval $(ssh-agent -s)
      ssh-add {{ KEY_PATH }}

  - name: Clone the repository
    ansible.builtin.shell: GIT_SSH_COMMAND="ssh -i {{ KEY_PATH }} -v -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" {{ GIT_EXECUTABLE }} clone {{ GIT_REPO }} {{ CLONE_DEST }}
  
  - name: Switch branch 
    ansible.builtin.shell: "{{ GIT_EXECUTABLE }} checkout {{ GIT_BRANCH }}"
    args:
      chdir: "{{ CLONE_DEST }}"

  ansible.builtin.always:
  - name: Kill the ssh-agent
    ansible.builtin.shell: export pid=`ps -A | grep ssh-agent | awk 'NR==1{print $1}' | cut -d' ' -f1`; kill $pid
